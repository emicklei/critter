<!-- Critter example Rule -->

<!-- if all the conditions are met then perform all the actions -->
<rule id="myrule" enabled="true" tracing="true">
    <conditions>
        <!-- true if the hostname of the request matches the given value -->
        <host matches="test.critter"/>

        <!-- true if the Http methods matches. Rules that do not contain
             this condition will accept any method -->
        <method matches="GET"/>

        <!-- true if the URL path of the request matches the given value (a regular expression)
        Use can use capturing groups , e.g. /products/(.+) and use its value in the response body
        by referring them as ${path.1} for the first group
        -->
        <path matches="/here/BOL"/>

        <!-- true if the URL port of the request matches the given value -->
        <port matches="9999"/>

        <!-- true if the specified Header (by name) of the request matches the given value -->
        <requestheader name="Content-Type" matches="application/xml"/>

        <!-- true if the Authorization header matches the Base64 encoded version of username:password combination -->
        <basicauthentication username="Aladdin" password="open sesame"/>

        <!-- true if the Xpath expression matches the body of the request (content-type must be application/xml -->
        <xpath expression="/root/node/value/text()" matches="1234"/>

        <!-- true if the Protobuf path to a value matches some value (content-type must be application/octet-stream) -->
        <protobufpath messageName="bindings.SomeType" expression=".field" matches="foobar"/>

        <!-- you can wrap any condition in a not element -->
        <not>
            <host matches="not.test.critter"/>
        </not>
    </conditions>
    <actions>
        <!-- change the scheme of the request, e.g.  http->https. Must be put before a forward -->
        <scheme name="https"/>

        <!-- change the port of the request -->
        <port value="443"/>

        <!-- make the proxy wait for a number of milliseconds during processing of the request -->
        <delay ms="1000"/>

        <!-- remove or add the specified Header with the given value -->
        <responseheader remove="Date" add="X-TEST" value="Y"/>

        <!-- forward the request to the host as defined by the request -->
        <forward/>

        <!-- set the status code of the response that will be send back to the client -->
        <status code="500"/>

        <!-- set the response body that will be send back to the client -->
        <responsebody>
            <body><![CDATA[
				<html></html>
			]]></body>
        </responsebody>

        <!-- close the outputstream of the response (not really a disconnect) -->
        <close/>

        <!-- send the response back to the client -->
        <respond/>

        <!-- dump information about the request or response (depends on location w.r.t forward)-->
        <trace/>

        <!-- create a new recording for this request-->
        <record/>

    </actions>
</rule>
